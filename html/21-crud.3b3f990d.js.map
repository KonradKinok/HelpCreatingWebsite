{"mappings":"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","sources":["src/scripts/functions.mjs","src/scripts/21.mjs"],"sourcesContent":["'use strict';\n/**\n *\n * @param {string} tagDivAndIdExampleTheory\n * @param {string} tagDivAndIdExamplePractice\n */\nexport function htmlTagViewExample(\n  tagDivAndIdExampleTheory,\n  tagDivAndIdExamplePractice,\n  className = 'example-theory-pre'\n) {\n  const example_theory = document.querySelector(tagDivAndIdExampleTheory);\n  const example_practice = document.querySelector(tagDivAndIdExamplePractice);\n\n  const phrase = document.createElement('pre');\n  phrase.classList.add(className);\n  // phrase.textContent = 'HTML:' + example_practice.innerHTML;\n  const temp = example_practice.innerHTML;\n\n  const newTemp = temp.replace(/ {2,}/g, '\\n\\r');\n  phrase.textContent = `'HTML: ${newTemp}`;\n  example_theory.prepend(phrase);\n}\n\n/**\n *LocalStorage save\n * @param {string} key\n * @param {object} value\n */\nexport const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\n/**\n *localStorage load\n * @param {*} key\n * @returns\n */\nexport const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\n/**getRandomElement\n *\n * @param {Array} array\n * @returns\n */\nexport function getRandomElement(array) {\n  // Generuj losowy indeks od 0 do array.length - 1\n  const randomIndex = Math.floor(Math.random() * array.length);\n  // Zwróć wybrany element\n  return array[randomIndex];\n}\n","'use strict';\n//Import\nimport * as mainMethods from './functions.mjs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport axios from 'axios';\nconst optionsNotify = {\n  timeout: 4000,\n};\n\n//section1 article2\nconst btn_s1a2 = document.querySelector('button#btn-s1a2');\nconst postsList_s1a2 = document.querySelector('ul#user-list-s1a2');\n\nbtn_s1a2.addEventListener('click', ev => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(response => response.json())\n    .then(posts => {\n      renderPosts_s1a2(posts);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a2(posts) {\n  postsList_s1a2.innerHTML = null;\n  const markup = posts\n    .map(({ id, title, body, userId }, index) => {\n      return `<li >\n          <h2 class=\"post-title\">${index + 1}. ${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p>${body}</p>\n        </li>`;\n    })\n    .join('');\n  postsList_s1a2.innerHTML = markup;\n}\n\n//section1 articule3\nmainMethods.htmlTagViewExample(\n  'div#example-theory-s1a3',\n  'div#example-practice-s1a3'\n);\n\nconst form_s1a3 = document.querySelector('form#form-s1a3');\nconst postsList_s1a3 = document.querySelector('ul#user-list-s1a3');\n\nfunction getOptionsToUrl(author, body) {\n  const postToAdd = {\n    author,\n    body,\n  };\n\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(postToAdd),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n  return options;\n}\n\nform_s1a3.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { input_author_s1a3, input_body_s1a3 },\n  } = event.currentTarget;\n  console.log(input_author_s1a3.value, input_body_s1a3.value);\n  const options = getOptionsToUrl(\n    input_author_s1a3.value,\n    input_body_s1a3.value\n  );\n  fetch('https://jsonplaceholder.typicode.com/posts', options)\n    .then(response => response.json())\n    .then(post => {\n      console.log(post);\n      renderPosts_s1a3(post);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a3(postAdd) {\n  const { author, body, id } = postAdd;\n  const markup = `<li >\n          <p><b>Method POST:</b></p>\n          <p><b>Post author</b>: ${author}</p>\n          <p><b>Post body</b>: ${body}</p>\n          <p><b>Author id</b>: ${id}</p>\n        </li>`;\n  postsList_s1a3.innerHTML = markup;\n}\n\n//section1 articule4\nmainMethods.htmlTagViewExample(\n  'div#example-theory-s1a4',\n  'div#example-practice-s1a4'\n);\n\nconst form_s1a4 = document.querySelector('form#form-s1a4');\nconst postsList_s1a4 = document.querySelector('ul#user-list-s1a4');\n\nfunction getOptionsToUrl_s1a4(id, body) {\n  const postToAdd = {\n    id,\n    body,\n  };\n\n  const options = {\n    method: 'PATCH',\n    body: JSON.stringify(postToAdd),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n  return options;\n}\n\nform_s1a4.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { input_id_s1a4, input_body_s1a4 },\n  } = event.currentTarget;\n  console.log(input_id_s1a4.value, input_body_s1a4.value);\n  const options = getOptionsToUrl_s1a4(\n    input_id_s1a4.value,\n    input_body_s1a4.value\n  );\n  fetch(\n    `https://jsonplaceholder.typicode.com/posts/${input_id_s1a4.value}`,\n    options\n  )\n    .then(response => response.json())\n    .then(post => {\n      console.log(post);\n      renderPosts_s1a4(post);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a4(patchAdd) {\n  const { id, title, body } = patchAdd;\n  const markup = `<li >\n          <p><b>Method POST:</b></p>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Post title</b>: ${title}</p>\n          <p><b>Post body</b>: ${body}</p>\n        </li>`;\n  postsList_s1a4.innerHTML = markup;\n}\n\n//section1 articule5\nmainMethods.htmlTagViewExample(\n  'div#example-theory-s1a5',\n  'div#example-practice-s1a5'\n);\n\nconst form_s1a5 = document.querySelector('form#form-s1a5');\nconst postsList_s1a5 = document.querySelector('ul#user-list-s1a5');\n\nfunction getOptionsToUrl_s1a5(id) {\n  const postToDelete = {\n    id,\n  };\n\n  const options = {\n    method: 'DELETE',\n    body: JSON.stringify(postToDelete),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n  return options;\n}\n\nform_s1a5.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { input_id_s1a5 },\n  } = event.currentTarget;\n  console.log(input_id_s1a5.value);\n  const options = getOptionsToUrl_s1a5(input_id_s1a5.value);\n  fetch(\n    `https://jsonplaceholder.typicode.com/posts/${input_id_s1a5.value}`,\n    options\n  )\n    .then(response => response.json())\n    .then(post => {\n      console.log(post);\n      renderPosts_s1a5(post);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a5(postDelete) {\n  const { id, title, body } = postDelete;\n  const markup = `<li >\n          <p><b>Method POST:</b></p>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Post title</b>: ${title}</p>\n          <p><b>Post body</b>: ${body}</p>\n        </li>`;\n  postsList_s1a5.innerHTML = markup;\n}\n"],"names":["$e68465bec6cd4cca$export$7d507e976ce8b444","tagDivAndIdExampleTheory","tagDivAndIdExamplePractice","className","example_theory","document","querySelector","example_practice","phrase","createElement","classList","add","newTemp","innerHTML","replace","textContent","prepend","$2d585ad1d4b53460$var$optionsNotify","timeout","$2d585ad1d4b53460$var$btn_s1a2","$2d585ad1d4b53460$var$postsList_s1a2","addEventListener","ev","fetch","then","response","json","posts","markup","map","id","title","body","userId","index","slice","join","$2d585ad1d4b53460$var$renderPosts_s1a2","catch","error","$iQIUW","Notify","failure","$2d585ad1d4b53460$var$form_s1a3","$2d585ad1d4b53460$var$postsList_s1a3","event","preventDefault","elements","input_author_s1a3","input_body_s1a3","currentTarget","console","log","value","options","author","postToAdd","method","JSON","stringify","headers","$2d585ad1d4b53460$var$getOptionsToUrl","post","postAdd","$2d585ad1d4b53460$var$renderPosts_s1a3","$2d585ad1d4b53460$var$form_s1a4","$2d585ad1d4b53460$var$postsList_s1a4","input_id_s1a4","input_body_s1a4","$2d585ad1d4b53460$var$getOptionsToUrl_s1a4","patchAdd","$2d585ad1d4b53460$var$renderPosts_s1a4","$2d585ad1d4b53460$var$form_s1a5","$2d585ad1d4b53460$var$postsList_s1a5","input_id_s1a5","postToDelete","$2d585ad1d4b53460$var$getOptionsToUrl_s1a5","postDelete","$2d585ad1d4b53460$var$renderPosts_s1a5"],"version":3,"file":"21-crud.3b3f990d.js.map"}