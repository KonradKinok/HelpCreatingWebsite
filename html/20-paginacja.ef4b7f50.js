var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},n={},o=e.parcelRequired7c6;function i(e,t,n="example-theory-pre"){const o=document.querySelector(e),i=document.querySelector(t),a=document.createElement("pre");a.classList.add(n);const l=i.innerHTML.split("  ").join("");a.textContent=`HTML: ${l}`,o.prepend(a)}null==o&&((o=function(e){if(e in t)return t[e].exports;if(e in n){var o=n[e];delete n[e];var i={id:e,exports:{}};return t[e]=i,o.call(i.exports,i,i.exports),i.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){n[e]=t},e.parcelRequired7c6=o);var a=o("iQIUW"),l=o("2shzp");const s={timeout:4e3};i("div#example-theory-s1a2","div#example-practice-s1a2");const r=document.querySelector("button#btn-s1a2"),c=document.querySelector("ul#user-list-s1a2");let d=0;r.addEventListener("click",(async()=>{const e=document.querySelector("input#input-s1a2");d=e.value;try{r.setAttribute("disabled","disabled");!function(e){c.innerHTML=null;const t=e.map((({id:e,title:t,body:n,userId:o},i)=>`<li>\n          <h2 class="post-title">${i+1}. ${t.slice(0,30)}</h2>\n          <p><b>Post id</b>: ${e}</p>\n          <p><b>Author id</b>: ${o}</p>\n          <p>${n}</p>\n        </li>`)).join("");c.innerHTML=t}(await async function(){const e=`https://jsonplaceholder.typicode.com/posts?${new URLSearchParams({_limit:d})}`,t=await l.default.get(e);return console.log(`adres ${e}`),t.data}())}catch(e){a.Notify.failure(`${e}`,s)}finally{r.removeAttribute("disabled"),console.log(`inputValue ${d}`)}})),i("div#example-theory-s1a3","div#example-practice-s1a3");const u=document.querySelector("button#btn-s1a3"),p=document.querySelector("ul#user-list-s1a3");let y=0,m=0;u.addEventListener("click",(async()=>{const e=document.querySelector("input#input-s1a3"),t=document.querySelector("input#input-page-s1a3");y=e.value,m=t.value;try{u.setAttribute("disabled","disabled");!function(e){p.innerHTML=null;const t=e.map((({id:e,title:t,body:n,userId:o},i)=>`<li>\n          <h2 class="post-title">${i+1}. ${t.slice(0,30)}</h2>\n          <p><b>Post id</b>: ${e}</p>\n          <p><b>Author id</b>: ${o}</p>\n          <p>${n}</p>\n        </li>`)).join("");p.innerHTML=t}(await async function(){const e=`https://jsonplaceholder.typicode.com/posts?${new URLSearchParams({_limit:y,_page:m})}`,t=await l.default.get(e);return console.log(`adres ${e}`),t.data}())}catch(e){a.Notify.failure(`${e}`,s)}finally{u.removeAttribute("disabled"),console.log(`limit Value ${y}`),console.log(`page Value ${m}`)}})),i("div#example-theory-s1a4","div#example-practice-s1a4");const b=document.querySelector("button#btn-s1a4"),f=document.querySelector("ul#user-list-s1a4");let h=1;b.addEventListener("click",(async()=>{try{!function(e){const t=e.map((({id:e,title:t,body:n,userId:o},i)=>`<li>\n          <h2 class="post-title">${i}. ${t.slice(0,30)}</h2>\n          <p><b>Post id</b>: ${e}</p>\n          <p><b>Author id</b>: ${o}</p>\n          <p class="post-body">${n}</p>\n        </li>`)).join("");f.insertAdjacentHTML("beforeend",t)}(await async function(){const e=new URLSearchParams({_limit:10,_page:h});return(await l.default.get(`https://jsonplaceholder.typicode.com/posts?${e}`)).data}()),h+=1,h>1&&(b.textContent="Fetch more posts")}catch(e){a.Notify.failure(`${e}`,s)}}));
//# sourceMappingURL=20-paginacja.ef4b7f50.js.map
