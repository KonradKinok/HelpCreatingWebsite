{"mappings":"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","sources":["src/scripts/05.mjs"],"sourcesContent":["'use strict';\n//deklaracja obiektu\nconst apartment = {\n  imgUrl: 'https://via.placeholder.com/640x480',\n  descr: 'Spacious apartment in the city center',\n  rating: 4,\n  price: 2153,\n  tags: ['premium', 'promoted', 'top'],\n  //deklaracja obiektu w obiekcie\n  owner: {\n    name: 'Henry',\n    phone: '982-126-1588',\n    email: 'henry.carter@aptmail.com',\n  },\n};\n\n//pobranie właściwości obiektu - obiekt.klucz\n// const aptRating = apartment.rating;\n// const aptDescr = apartment.descr;\n// const aptPrice = apartment.price;\n// const aptTags = apartment.tags;\n\n//pobranie zagnieżdżonej właściwości obiektu - obiekt.klucz\nconst ownerName = apartment.owner.name;\nconst ownerPhone = apartment.owner.phone;\nconst ownerEmail = apartment.owner.email;\nconst numberOfTags = apartment.tags.length;\nconst firstTag = apartment.tags[0];\nconst lastTag = apartment.tags[numberOfTags - 1];\n\n//pobranie właściwości obiektu - obiekt[\"nazwa\"]\nconst aptRating = apartment['rating'];\nconst aptDescr = apartment['descr'];\nconst aptPrice = apartment['price'];\nconst aptTags = apartment['tags'];\n\n//zmiana wartości właściwości obiektu\napartment.price = 5000;\napartment.rating = 4.7;\napartment.owner.name = 'Henry Sibola';\napartment.tags.push('trusted');\n\n//7. dodanie właściwości i wraz z wartościami do obiektu\napartment.area = 60;\napartment.rooms = 3;\napartment.location = {};\napartment.location.country = 'Jamaica';\napartment.location.city = 'Kingston';\n\n//8. tworzenie właściwości obiektu ze wcześniej zadeklarowanych zmiennych\n// const name = 'Repair Droid';\n// const price = 2500;\n// const image = 'https://via.placeholder.com/640x480';\n// const tags = ['on sale', 'trending', 'best buy'];\n\n// const product = {\n//   name,\n//   price,\n//   image,\n//   tags,\n// };\n\n//9. dodanie właściwości o nieznanej nazwie\nconst emailInputName = 'email';\nconst passwordInputName = 'password';\n\nconst credentials = {\n  [emailInputName]: 'henry.carter@aptmail.com',\n  [passwordInputName]: 'jqueryismyjam',\n};\n\n//10. iteracja po obiekcie - dodanie keys i values do tablic\nconst apartment1 = {\n  descr: 'Spacious apartment in the city center',\n  rating: 4,\n  price: 2153,\n};\nconst keys = [];\nconst values = [];\nfor (const key in apartment1) {\n  keys.push(key);\n  values.push(apartment1[key]);\n}\n\n//11. iteracja po obiekcie - sprawdzanie własnej właściwości\nconst keys11 = [];\nconst values11 = [];\nconst advert = {\n  service: 'apt',\n};\nconst apartment11 = Object.create(advert);\napartment11.descr = 'Spacious apartment in the city center';\napartment11.rating = 4;\napartment11.price = 2153;\n\nfor (const key in apartment11) {\n  if (apartment11.hasOwnProperty(key)) {\n    keys11.push(key);\n    values11.push(apartment11[key]);\n  }\n}\n\n//12. funkcja zwracająca tylko własne właściwości\nfunction countProps(object) {\n  let propCount = 0;\n\n  for (const key in object) {\n    if (object.hasOwnProperty(key)) {\n      propCount++;\n    }\n  }\n  return propCount;\n}\n\nconst count = countProps({ name: 'Mango', age: 2 });\n// console.log(count);\n\n//13. Metoda Object.keys(obj)\nconst apartment13 = {\n  descr: 'Spacious apartment in the city center',\n  rating: 4,\n  price: 2153,\n};\nconst values13 = [];\nconst keys13 = Object.keys(apartment13);\n\nfor (const key of keys13) {\n  values13.push(apartment13[key]);\n}\n// console.log(values13);\n\n//14. funkcja zwracająca tylko własne właściwości - Metoda Object.keys(obj)\nfunction countProps14(object) {\n  let propCount = 0;\n  const keys14 = Object.keys(object);\n  propCount = keys14.length;\n  return propCount;\n}\nconst count14 = countProps14({ name: 'Mango', age: 2 });\n// console.log(count14);\n\n//15. funkcja zwracająca tylko własne właściwości - Metoda Object.values(obj)\nconst apartment15 = {\n  descr: 'Spacious apartment in the city center',\n  rating: 4,\n  price: 2153,\n};\nconst keys15 = Object.keys(apartment15);\nconst values15 = Object.values(apartment15);\n// console.log(keys15, values15);\n\n//16. Funkcja powinna obliczyć łączną kwotę wynagrodzeń pracowników i zwrócić ją\nfunction countTotalSalary(salaries) {\n  let totalSalary = 0;\n  const keys16 = Object.keys(salaries);\n  const values16 = Object.values(salaries);\n  for (const key of keys16) {\n    totalSalary += salaries[key];\n  }\n  return totalSalary;\n}\n// console.log(countTotalSalary({ mango: 100, poly: 150, alfred: 80 }));\n\n// 17. Przeiteruj po tablicy obiektów colors używając pętli for...of\nconst colors = [\n  { hex: '#f44336', rgb: '244,67,54' },\n  { hex: '#2196f3', rgb: '33,150,243' },\n  { hex: '#4caf50', rgb: '76,175,80' },\n  { hex: '#ffeb3b', rgb: '255,235,59' },\n];\n\nconst hexColors = [];\nconst rgbColors = [];\nfor (const key of colors) {\n  hexColors.push(key.hex);\n  rgbColors.push(key.rgb);\n}\n// console.log(hexColors, rgbColors);\n\n//18. Poszukiwanie obiektu według wartości właściwości\nconst products = [\n  { name: 'Radar', price: 1300, quantity: 4 },\n  { name: 'Scanner', price: 2700, quantity: 3 },\n  { name: 'Droid', price: 400, quantity: 7 },\n  { name: 'Grip', price: 1200, quantity: 9 },\n];\n\nfunction getProductPrice(productName) {\n  for (const key of products) {\n    if (key.name === productName) {\n      return key.price;\n    }\n  }\n  return null;\n}\n// console.log(getProductPrice('Droid'));\n// console.log(getProductPrice('Engine'));\n\n//19. kolekcja wartości właściwości\nconst products19 = [\n  { name: 'Radar', price: 1300, quantity: 4 },\n  { name: 'Scanner', price: 2700, quantity: 3 },\n  { name: 'Droid', price: 400, quantity: 7 },\n  { name: 'Grip', price: 1200, quantity: 9 },\n];\n\nfunction getAllPropValues(propName) {\n  const returnTab = [];\n\n  for (const product of products19) {\n    const rowsProperties = Object.keys(product);\n\n    for (const property of rowsProperties) {\n      if (property === propName) {\n        returnTab.push(product[property]);\n      }\n    }\n  }\n  return returnTab;\n}\n// console.log(getAllPropValues('price'));\n// console.log(getAllPropValues('category'));\n\n//20.całkowity koszt towaru\nconst products20 = [\n  { name: 'Radar', price: 1300, quantity: 4 },\n  { name: 'Scanner', price: 2700, quantity: 3 },\n  { name: 'Droid', price: 400, quantity: 7 },\n  { name: 'Grip', price: 1200, quantity: 9 },\n];\n\nfunction calculateTotalPrice(productName) {\n  let cost = 0;\n\n  for (const product of products20) {\n    const rowsProperties = Object.keys(product);\n\n    for (const property of rowsProperties) {\n      if (product[property] === productName) {\n        cost = product.price * product.quantity;\n      }\n    }\n  }\n  return cost;\n}\n// console.log(calculateTotalPrice('Blaster'));\n// console.log(calculateTotalPrice('Radar'));\n\n//21. Destrukturyzacja\nconst highTemperatures = {\n  yesterday: 28,\n  today: 26,\n  tomorrow: 33,\n};\n// const { yesterday, today, tomorrow } = highTemperatures;\n// const meanTemperature = (yesterday + today + tomorrow) / 3;\n// console.log(meanTemperature);\n\n//22. Destrukturyzacja - dodatkowy parametr\nconst highTemperatures22 = {\n  yesterday: 28,\n  today: 26,\n  tomorrow: 33,\n};\n// const {\n//   yesterday,\n//   today,\n//   tomorrow,\n//   icon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\n// } = highTemperatures22;\n// const meanTemperature = (yesterday + today + tomorrow) / 3;\n// console.log(meanTemperature);\n\n//23. Destrukturyzacja - zmiana nazwy zmiennej\nconst highTemperatures23 = {\n  yesterday: 28,\n  today: 26,\n  tomorrow: 33,\n};\n// const {\n//   yesterday: highYesterday,\n//   today: highToday,\n//   tomorrow: highTomorrow,\n//   icon: highIcon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\n// } = highTemperatures23;\n// const meanTemperature = (highYesterday + highToday + highTomorrow) / 3;\n// console.log(meanTemperature);\n\n//24. Destrukturyzacja - wiele obiektów\nconst colors24 = [\n  { hex: '#f44336', rgb: '244,67,54' },\n  { hex: '#2196f3', rgb: '33,150,243' },\n  { hex: '#4caf50', rgb: '76,175,80' },\n  { hex: '#ffeb3b', rgb: '255,235,59' },\n];\n\nconst hexColors24 = [];\nconst rgbColors24 = [];\n\nfor (const color of colors) {\n  const { hex, rgb } = color;\n  hexColors24.push(hex);\n  rgbColors24.push(rgb);\n}\n// console.log(hexColors24, rgbColors24);\n\n//25. Destrukturyzacja - obiekty zagnieżdżone\nconst forecast = {\n  today: {\n    low: 28,\n    high: 32,\n    icon: 'https://www.flaticon.com/svg/static/icons/svg/861/861059.svg',\n  },\n  tomorrow: {\n    low: 27,\n    high: 31,\n  },\n};\n\nconst {\n  today: {\n    low: lowToday,\n    high: highToday,\n    icon: todayIcon = 'https://www.flaticon.com/svg/static/icons/svg/861/861059.svg',\n  },\n  tomorrow: {\n    low: lowTomorrow,\n    high: highTomorrow,\n    icon: tomorrowIcon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\n  },\n} = forecast;\n// console.log(lowToday);\n\n// 26. Wzorzec «Obiekt ustawień»\nfunction calculateMeanTemperature(forecast) {\n  const {\n    today: {\n      low: todayLow,\n      high: todayHigh,\n      icon: todayIcon = 'https://www.flaticon.com/svg/static/icons/svg/861/861059.svg',\n    },\n    tomorrow: {\n      low: tomorrowLow,\n      high: tomorrowHigh,\n      icon: tomorrowIcon = 'https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg',\n    },\n  } = forecast;\n  return (todayLow + todayHigh + tomorrowLow + tomorrowHigh) / 4;\n}\n\n// console.log(\n//   calculateMeanTemperature({\n//     today: { low: 28, high: 32 },\n//     tomorrow: { low: 25, high: 29 },\n//   })\n// );\n\n// 27. Składnia ... (spread)\nconst scores = [89, 64, 42, 17, 93, 51, 26];\n\n// const bestScore = Math.max(...scores);\n// const worstScore = Math.min(...scores);\n// console.log(worstScore, bestScore);\n\n// 28. Składnia ... (spread) -łączenie tablic\nconst firstGroupScores = [64, 42, 93];\nconst secondGroupScores = [89, 14, 51, 26];\nconst thirdGroupScores = [29, 47, 18, 97, 81];\n\nconst allScores = [\n  ...firstGroupScores,\n  ...secondGroupScores,\n  ...thirdGroupScores,\n];\nconst bestScore = Math.max(...allScores);\nconst worstScore = Math.min(...allScores);\n// console.log(allScores, worstScore, bestScore);\n\n// 29. Składnia ... (spread) -łączenie obiektów\nconst defaultSettings = {\n  theme: 'light',\n  public: true,\n  withPassword: false,\n  minNumberOfQuestions: 10,\n  timePerQuestion: 60,\n};\nconst overrideSettings = {\n  public: false,\n  withPassword: true,\n  timePerQuestion: 30,\n};\n\nconst finalSettings = { ...defaultSettings, ...overrideSettings };\n// console.log(finalSettings);\n\n// 30. Składnia ... (spread) - Karty zadań\nfunction makeTask(data) {\n  const completed = false;\n  const category = 'General';\n  const priority = 'Normal';\n\n  const task = {\n    category: category,\n    priority: priority,\n    completed: completed,\n  };\n\n  const finalSettings = { ...task, ...data };\n  return finalSettings;\n}\n// console.log(makeTask({}));\n// console.log(\n//   makeTask({\n//     category: 'Homemade',\n//     priority: 'Low',\n//     text: 'Take out the trash',\n//   })\n// );\n\n// 31. Operacja ... (rest)\nfunction add(...args) {\n  let sum = 0;\n  for (let i = 0; i < args.length; i++) {\n    sum += args[i];\n  }\n  return sum;\n}\n// console.log(add(12, 4, 11, 48));\n\n// 32. Operacja ... (rest) - część argumentów\nfunction addOverNum(...args) {\n  let total = 0;\n\n  for (const arg of args) {\n    if (args[0] < arg) {\n      total += arg;\n    }\n  }\n\n  return total;\n  // Change code above this line\n}\n// console.log(addOverNum(10, 12, 4, 11, 48, 10, 8));\n\n// 33. Operacja ... (rest) - Tablica dopasowań\nfunction findMatches(...args) {\n  const matches = [];\n\n  for (let i = 0; i < args[0].length; i++) {\n    let firstTableNum = args[0][i];\n\n    for (let j = 1; j < args.length; j++) {\n      if (firstTableNum === args[j]) {\n        matches.push(args[j]);\n      }\n    }\n  }\n  return matches;\n}\n// console.log(findMatches([1, 2, 3, 4, 5], 1, 8, 2, 7));\n\n// 34. Metody obiektów\nconst bookShelf = {\n  books: ['The last kingdom', 'The guardian of dreams'],\n  getBooks() {\n    return 'Returning all books';\n  },\n  addBook(bookName) {\n    return `Adding book ${bookName}`;\n  },\n  removeBook(bookName) {\n    return `Deleting book ${bookName}`;\n  },\n  updateBook(oldName, newName) {\n    return `Updating book ${oldName} to ${newName}`;\n  },\n};\n\n// 35. Metody obiektów - this\nconst bookShelf35 = {\n  books: ['The last kingdom', 'Haze', 'The guardian of dreams'],\n  updateBook(oldName, newName) {\n    const bookIndex = this.books.indexOf(oldName);\n    this.books.splice(bookIndex, 1, newName);\n    // console.log(this.books);\n  },\n};\n\nbookShelf35.updateBook('Haze', 'Dungeon chronicles');\n// console.log(bookShelf35);\n\n// 36. Obiekt - dodanie właściwości\nconst atTheOldToad = {\n  potions: [],\n};\n\n// 37. Obiekt - metoda odczytu\nconst atTheOldToad37 = {\n  potions: ['Speed potion', 'Dragon breath', 'Stone skin'],\n  getPotions() {\n    return this.potions;\n  },\n};\n// console.log(atTheOldToad37.potions);\n\n// 38. Obiekt - metoda dodania elementu\nconst atTheOldToad38 = {\n  potions: ['Speed potion', 'Dragon breath', 'Stone skin'],\n  addPotion(potionName) {\n    this.potions.push(potionName);\n  },\n};\natTheOldToad38.addPotion('Invisibility');\n// console.log(atTheOldToad38.potions);\n\n// 39. Obiekt - metoda usunięcia elementu\nconst atTheOldToad39 = {\n  potions: ['Speed potion', 'Dragon breath', 'Stone skin'],\n  removePotion(potionName) {\n    const potionIndex = this.potions.indexOf(potionName);\n    this.potions.splice(potionIndex, 1);\n  },\n};\natTheOldToad39.removePotion('Dragon breath');\n// console.log(atTheOldToad39.potions);\n\n// 40. Obiekt - metoda zamiana elementu\nconst atTheOldToad40 = {\n  potions: ['Speed potion', 'Dragon breath', 'Stone skin'],\n  updatePotionName(oldName, newName) {\n    const potionIndex = this.potions.indexOf(oldName);\n    this.potions.splice(potionIndex, 1, newName);\n  },\n};\natTheOldToad40.updatePotionName('Dragon breath', 'Polymorth');\n// console.log(atTheOldToad40.potions);\n\n// 41. Obiekt - metoda zamiana elementu\nconst atTheOldToad41 = {\n  potions: [\n    { name: 'Speed potion', price: 460 },\n    { name: 'Dragon breath', price: 780 },\n    { name: 'Stone skin', price: 520 },\n  ],\n  // Change code below this line\n  getPotions() {\n    return this.potions;\n  },\n  addPotion(newPotion) {\n    for (const key of this.potions) {\n      if (key.name === newPotion.name) {\n        return `Error! Potion ${newPotion.name} is already in your inventory!`;\n      }\n    }\n    this.potions.push(newPotion);\n  },\n\n  removePotion(potionName) {\n    const potionIndex = this.potions.findIndex(\n      potion => potion.name === potionName\n    );\n\n    if (potionIndex === -1) {\n      return `Potion ${potionName} is not in inventory!`;\n    }\n\n    this.potions.splice(potionIndex, 1);\n  },\n\n  updatePotionName(oldName, newName) {\n    const potionIndex = this.potions.findIndex(\n      potion => potion.name === oldName\n    );\n\n    if (potionIndex === -1) {\n      return `Potion ${oldName} is not in inventory!`;\n    }\n\n    this.potions[potionIndex].name = newName;\n  },\n  // Change code above this line\n};\n\n// console.log(atTheOldToad41.addPotion({ name: 'Stone skin', price: 240 }));\n// atTheOldToad41.addPotion({ name: 'Power potion', price: 270 });\n// console.log(atTheOldToad41.removePotion('Dragon breath'));\natTheOldToad41.updatePotionName('Dragon breath', 'Polymorth');\n// console.log(atTheOldToad41.getPotions());\n\n// section2 article4\n\nconst persons = [\n  {\n    firstName: 'Adam',\n    secondName: 'Bogota',\n    sex: 'man',\n    streetName: 'Piękna',\n    streetNumber: '8b/2',\n    zipCode: '22-800',\n    lacality: 'Wrocław',\n    dateOfBirth: new Date('1986 - 12 - 24'),\n    accountBalance: 156_000,\n    activeAccount: true,\n    phoneNumber: 325_346_543,\n    recentExpenses: [125, 2043, 468, 7843, 6775, 53432, 432, 4, 4325, 545436],\n  },\n  {\n    firstName: 'Anna',\n    secondName: 'Nowak',\n    sex: 'woman',\n    streetName: 'Widok',\n    streetNumber: '2',\n    zipCode: '32-660',\n    lacality: 'Poznań',\n    dateOfBirth: new Date(1945 - 6 - 14),\n    accountBalance: 2355_040,\n    activeAccount: false,\n    phoneNumber: 527_949_383,\n    recentExpenses: [\n      543, 345, 34563, 23554, 11323, 43632, 4378, 864, 7564, 45636,\n    ],\n  },\n  {\n    firstName: 'Karol',\n    secondName: 'Cevalo',\n    sex: 'man',\n    streetName: 'Eklerda',\n    streetNumber: '15',\n    zipCode: '40-066',\n    lacality: 'Świebodzin',\n    dateOfBirth: new Date(1977 - 6 - 1),\n    accountBalance: 335_156_000_000,\n    activeAccount: true,\n    phoneNumber: 456_041_479,\n    recentExpenses: [\n      12452, 173053, 423054, 1100765, 92, 24000, 7843, 17004, 500, 500,\n    ],\n  },\n];\n\nconsole.log(\n  '%c section2 article4 ',\n  'color: rgb(0, 0, 0); background-color: rgb(255, 255, 0)',\n  'Metoda Object.keys()'\n);\nconst keys_s1a4 = Object.keys(persons[0]);\nconsole.table(keys_s1a4);\n\nconsole.group('object details');\nfor (const key of keys_s1a4) {\n  console.log(key, typeof persons[0][key], persons[0][key]);\n}\nconsole.groupEnd();\nconsole.log('-----------------------------------------------');\n// section3 article1\nconsole.log(\n  '%c section3 article1 ',\n  'color: rgb(0, 0, 0); background-color: rgb(255, 255, 0)',\n  'pętla for...of'\n);\nconst personNames = [];\nconst recentExpenses = [];\n\nfor (const person of persons) {\n  personNames.push(person.firstName);\n  recentExpenses.push(person.recentExpenses);\n}\nconsole.table(personNames);\nconsole.table(recentExpenses);\nconsole.log('-----------------------------------------------');\n"],"names":["$cba8e5ba2de658e7$var$apartment","imgUrl","descr","rating","price","tags","owner","name","phone","email","$cba8e5ba2de658e7$var$numberOfTags","length","push","area","rooms","location","country","city","$cba8e5ba2de658e7$var$apartment1","$cba8e5ba2de658e7$var$keys","$cba8e5ba2de658e7$var$values","key","$cba8e5ba2de658e7$var$keys11","$cba8e5ba2de658e7$var$values11","$cba8e5ba2de658e7$var$apartment11","Object","create","service","key1","hasOwnProperty","object","propCount","key5","$cba8e5ba2de658e7$var$countProps","age","$cba8e5ba2de658e7$var$apartment13","$cba8e5ba2de658e7$var$values13","$cba8e5ba2de658e7$var$keys13","keys","key2","$cba8e5ba2de658e7$var$countProps14","$cba8e5ba2de658e7$var$apartment15","values","$cba8e5ba2de658e7$var$colors","hex","rgb","$cba8e5ba2de658e7$var$hexColors","$cba8e5ba2de658e7$var$rgbColors","key3","$cba8e5ba2de658e7$var$hexColors24","$cba8e5ba2de658e7$var$rgbColors24","color","today","low","$cba8e5ba2de658e7$var$lowToday","high","$cba8e5ba2de658e7$var$highToday","icon","$cba8e5ba2de658e7$var$todayIcon","tomorrow","$cba8e5ba2de658e7$var$lowTomorrow","$cba8e5ba2de658e7$var$highTomorrow","$cba8e5ba2de658e7$var$tomorrowIcon","$cba8e5ba2de658e7$var$allScores","Math","max","min","books","updateBook","oldName","newName","bookIndex","this","indexOf","splice","potions","addPotion","potionName","removePotion","potionIndex","updatePotionName","getPotions","newPotion","key8","findIndex","potion","$cba8e5ba2de658e7$var$persons","firstName","secondName","sex","streetName","streetNumber","zipCode","lacality","dateOfBirth","Date","accountBalance","activeAccount","phoneNumber","recentExpenses","console","log","$cba8e5ba2de658e7$var$keys_s1a4","table","group","key4","groupEnd","$cba8e5ba2de658e7$var$personNames","$cba8e5ba2de658e7$var$recentExpenses","person"],"version":3,"file":"05-obiekty.5c76240c.js.map"}