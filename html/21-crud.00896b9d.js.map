{"mappings":"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","sources":["src/scripts/functions.mjs","src/scripts/21.mjs"],"sourcesContent":["'use strict';\n/**\n *\n * @param {string} tagDivAndIdExampleTheory\n * @param {string} tagDivAndIdExamplePractice\n */\nexport function htmlTagViewExample(\n  tagDivAndIdExampleTheory,\n  tagDivAndIdExamplePractice,\n  className = 'example-theory-pre'\n) {\n  const example_theory = document.querySelector(tagDivAndIdExampleTheory);\n  const example_practice = document.querySelector(tagDivAndIdExamplePractice);\n\n  const phrase = document.createElement('pre');\n  phrase.classList.add(className);\n  // phrase.textContent = 'HTML:' + example_practice.innerHTML;\n  const temp = example_practice.innerHTML;\n\n  const newTemp = temp.replace(/ {2,}/g, '\\n\\r');\n  phrase.textContent = `'HTML: ${newTemp}`;\n  example_theory.prepend(phrase);\n}\n\n/**\n *LocalStorage save\n * @param {string} key\n * @param {object} value\n */\nexport const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\n/**\n *localStorage load\n * @param {*} key\n * @returns\n */\nexport const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\n/**getRandomElement\n *\n * @param {Array} array\n * @returns\n */\nexport function getRandomElement(array) {\n  // Generuj losowy indeks od 0 do array.length - 1\n  const randomIndex = Math.floor(Math.random() * array.length);\n  // Zwróć wybrany element\n  return array[randomIndex];\n}\n","'use strict';\n//Import\nimport * as mainMethods from './functions.mjs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport axios from 'axios';\nconst optionsNotify = {\n  timeout: 4000,\n};\n\n//section1 article2\nconst btn_s1a2 = document.querySelector('button#btn-s1a2');\nconst postsList_s1a2 = document.querySelector('ul#user-list-s1a2');\n\nbtn_s1a2.addEventListener('click', ev => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(response => response.json())\n    .then(posts => {\n      renderPosts_s1a2(posts);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a2(posts) {\n  postsList_s1a2.innerHTML = null;\n  const markup = posts\n    .map(({ id, title, body, userId }, index) => {\n      return `<li >\n          <h2 class=\"post-title\">${index + 1}. ${title.slice(0, 30)}</h2>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Author id</b>: ${userId}</p>\n          <p>${body}</p>\n        </li>`;\n    })\n    .join('');\n  postsList_s1a2.innerHTML = markup;\n}\n\n//section1 articule3\nmainMethods.htmlTagViewExample(\n  'div#example-theory-s1a3',\n  'div#example-practice-s1a3'\n);\n\nconst form_s1a3 = document.querySelector('form#form-s1a3');\nconst postsList_s1a3 = document.querySelector('ul#user-list-s1a3');\n\nfunction getOptionsToUrl(author, body) {\n  const postToAdd = {\n    author,\n    body,\n  };\n\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(postToAdd),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n  return options;\n}\n\nform_s1a3.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { input_author_s1a3, input_body_s1a3 },\n  } = event.currentTarget;\n  console.log(input_author_s1a3.value, input_body_s1a3.value);\n  const options = getOptionsToUrl(\n    input_author_s1a3.value,\n    input_body_s1a3.value\n  );\n  fetch('https://jsonplaceholder.typicode.com/posts', options)\n    .then(response => response.json())\n    .then(post => {\n      console.log(post);\n      renderPosts_s1a3(post);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a3(postAdd) {\n  const { author, body, id } = postAdd;\n  const markup = `<li >\n          <p><b>Method POST:</b></p>\n          <p><b>Post author</b>: ${author}</p>\n          <p><b>Post body</b>: ${body}</p>\n          <p><b>Author id</b>: ${id}</p>\n        </li>`;\n  postsList_s1a3.innerHTML = markup;\n}\n\n//section1 articule4\nmainMethods.htmlTagViewExample(\n  'div#example-theory-s1a4',\n  'div#example-practice-s1a4'\n);\n\nconst form_s1a4 = document.querySelector('form#form-s1a4');\nconst postsList_s1a4 = document.querySelector('ul#user-list-s1a4');\n\nfunction getOptionsToUrl_s1a4(id, body) {\n  const postToAdd = {\n    id,\n    body,\n  };\n\n  const options = {\n    method: 'PATCH',\n    body: JSON.stringify(postToAdd),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n  return options;\n}\n\nform_s1a4.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { input_id_s1a4, input_body_s1a4 },\n  } = event.currentTarget;\n  console.log(input_id_s1a4.value, input_body_s1a4.value);\n  const options = getOptionsToUrl_s1a4(\n    input_id_s1a4.value,\n    input_body_s1a4.value\n  );\n  fetch(\n    `https://jsonplaceholder.typicode.com/posts/${input_id_s1a4.value}`,\n    options\n  )\n    .then(response => response.json())\n    .then(post => {\n      console.log(post);\n      renderPosts_s1a4(post);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a4(patchAdd) {\n  const { id, title, body } = patchAdd;\n  const markup = `<li >\n          <p><b>Method POST:</b></p>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Post title</b>: ${title}</p>\n          <p><b>Post body</b>: ${body}</p>\n        </li>`;\n  postsList_s1a4.innerHTML = markup;\n}\n\n//section1 articule5\nmainMethods.htmlTagViewExample(\n  'div#example-theory-s1a5',\n  'div#example-practice-s1a5'\n);\n\nconst form_s1a5 = document.querySelector('form#form-s1a5');\nconst postsList_s1a5 = document.querySelector('ul#user-list-s1a5');\n\nfunction getOptionsToUrl_s1a5(id) {\n  const postToDelete = {\n    id,\n  };\n\n  const options = {\n    method: 'DELETE',\n    body: JSON.stringify(postToDelete),\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  };\n  return options;\n}\n\nform_s1a5.addEventListener('submit', event => {\n  event.preventDefault();\n  const {\n    elements: { input_id_s1a5 },\n  } = event.currentTarget;\n  console.log(input_id_s1a5.value);\n  const options = getOptionsToUrl_s1a5(input_id_s1a5.value);\n  fetch(\n    `https://jsonplaceholder.typicode.com/posts/${input_id_s1a5.value}`,\n    options\n  )\n    .then(response => response.json())\n    .then(post => {\n      console.log(post);\n      renderPosts_s1a5(post);\n    })\n    .catch(error => Notify.failure(`${error}`, optionsNotify));\n});\n\nfunction renderPosts_s1a5(postDelete) {\n  const { id, title, body } = postDelete;\n  const markup = `<li >\n          <p><b>Method POST:</b></p>\n          <p><b>Post id</b>: ${id}</p>\n          <p><b>Post title</b>: ${title}</p>\n          <p><b>Post body</b>: ${body}</p>\n        </li>`;\n  postsList_s1a5.innerHTML = markup;\n}\n"],"names":["$dbfd4373dd994ba2$export$7d507e976ce8b444","tagDivAndIdExampleTheory","tagDivAndIdExamplePractice","className","arguments","length","example_theory","document","querySelector","example_practice","phrase","createElement","classList","add","temp","innerHTML","newTemp","replace","textContent","concat","prepend","$3cfe319d1598dba4$var$optionsNotify","timeout","$3cfe319d1598dba4$var$btn_s1a2","$3cfe319d1598dba4$var$postsList_s1a2","addEventListener","ev","fetch","then","response","json","posts","markup","map","param","index","id","title","body","userId","slice","join","$3cfe319d1598dba4$var$renderPosts_s1a2","catch","error","$h6c0i","Notify","failure","$3cfe319d1598dba4$var$form_s1a3","$3cfe319d1598dba4$var$postsList_s1a3","event","preventDefault","_elements","currentTarget","elements","input_author_s1a3","input_body_s1a3","console","log","value","author","postToAdd","options","method","JSON","stringify","headers","post","postAdd","$3cfe319d1598dba4$var$renderPosts_s1a3","$3cfe319d1598dba4$var$form_s1a4","$3cfe319d1598dba4$var$postsList_s1a4","input_id_s1a4","input_body_s1a4","patchAdd","$3cfe319d1598dba4$var$renderPosts_s1a4","$3cfe319d1598dba4$var$form_s1a5","$3cfe319d1598dba4$var$postsList_s1a5","input_id_s1a5","postToDelete","postDelete","$3cfe319d1598dba4$var$renderPosts_s1a5"],"version":3,"file":"21-crud.00896b9d.js.map"}