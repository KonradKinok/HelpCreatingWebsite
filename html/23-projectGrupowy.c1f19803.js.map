{"mappings":"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","sources":["src/scripts/23a.mjs","src/scripts/23.mjs"],"sourcesContent":["'use strict';\n//Import\nimport axios from 'axios';\n//ApiKey\nconst apiKey = '6bb894494c1a707618648b9164f393c2';\nconst AXIOS_AUTHORIZATION =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YmI4OTQ0OTRjMWE3MDc2MTg2NDhiOTE2NGYzOTNjMiIsInN1YiI6IjVlZDdiZmY3ZTRiNTc2MDAyMDM3NjYzZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kRGs0WRoomKwYXT7Mt8PNU2Zk6kAVasud5CyVVdf2mA';\n//Axios header - api key\naxios.defaults.headers.common['Authorization'] = AXIOS_AUTHORIZATION;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getMostPopularMovies(currentPage) {\n  const searchParams = new URLSearchParams({\n    language: 'en-US',\n    page: currentPage,\n  });\n  const url = `https://api.themoviedb.org/3/trending/movie/day?${searchParams}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function getTmdbConfiguration() {\n  const url = `https://api.themoviedb.org/3/configuration`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\n// async function getTmdbGenres() {\n//   const searchParams = new URLSearchParams({\n//     language: 'en-US',\n//   });\n//   const url = `https://api.themoviedb.org/3/genre/movie/list?${searchParams}`;\n//   const response = await axios.get(url);\n//   return response.data;\n// }\n\n// export function getGenres() {\n//   try {\n//     const TAB_GENRIES = getTmdbGenres();\n//     // console.log(genres);\n//     return TAB_GENRIES;\n//   } catch (error) {\n//     // Notify.failure(`${error}`, optionsNotify);\n//     console.log(error);\n//     throw error; // Rzucamy błąd, aby móc go obsłużyć dalej, jeśli to konieczne\n//   }\n// }\nexport function getUrlSizePoster(posterPath) {\n  const url = 'https://image.tmdb.org/t/p/';\n  const poster_sizes = [\n    'w92',\n    'w154',\n    'w185',\n    'w342',\n    'w500',\n    'w780',\n    'original',\n  ];\n  const postersUrlsObject = poster_sizes.map(size => {\n    return {\n      name: size,\n      url: url + size + posterPath,\n    };\n  });\n  return postersUrlsObject;\n}\n\nexport function getGenres(genre_ids) {\n  const genres = [\n    {\n      id: 28,\n      name: 'Action',\n    },\n    {\n      id: 12,\n      name: 'Adventure',\n    },\n    {\n      id: 16,\n      name: 'Animation',\n    },\n    {\n      id: 35,\n      name: 'Comedy',\n    },\n    {\n      id: 80,\n      name: 'Crime',\n    },\n    {\n      id: 99,\n      name: 'Documentary',\n    },\n    {\n      id: 18,\n      name: 'Drama',\n    },\n    {\n      id: 10751,\n      name: 'Family',\n    },\n    {\n      id: 14,\n      name: 'Fantasy',\n    },\n    {\n      id: 36,\n      name: 'History',\n    },\n    {\n      id: 27,\n      name: 'Horror',\n    },\n    {\n      id: 10402,\n      name: 'Music',\n    },\n    {\n      id: 9648,\n      name: 'Mystery',\n    },\n    {\n      id: 10749,\n      name: 'Romance',\n    },\n    {\n      id: 878,\n      name: 'Science Fiction',\n    },\n    {\n      id: 10770,\n      name: 'TV Movie',\n    },\n    {\n      id: 53,\n      name: 'Thriller',\n    },\n    {\n      id: 10752,\n      name: 'War',\n    },\n    {\n      id: 37,\n      name: 'Western',\n    },\n  ];\n  const matchingGenres = genres\n    .filter(genre => genre_ids.includes(genre.id))\n    .map(genre => genre.name);\n\n  const genreNames = matchingGenres.join(', ');\n  return genreNames;\n}\n","'use strict';\n//Import\nimport * as mainMethods from './functions.mjs';\nimport * as tmdb from './23a.mjs';\nimport axios from 'axios';\n//ApiKey\nconst apiKey = '6bb894494c1a707618648b9164f393c2';\nconst AXIOS_AUTHORIZATION =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YmI4OTQ0OTRjMWE3MDc2MTg2NDhiOTE2NGYzOTNjMiIsInN1YiI6IjVlZDdiZmY3ZTRiNTc2MDAyMDM3NjYzZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kRGs0WRoomKwYXT7Mt8PNU2Zk6kAVasud5CyVVdf2mA';\n//Axios header - api key\naxios.defaults.headers.common['Authorization'] = AXIOS_AUTHORIZATION;\n\n//DOM\nconst searchButton = document.querySelector('button#search-button');\nconst gallery = document.querySelector('ul#cards-list');\n\nsearchButton.addEventListener('click', ev => {\n  getMostPopularMovies();\n});\n\n//Functions\nfunction getMostPopularMovies() {\n  tmdb\n    .getMostPopularMovies(1)\n    .then(dataMovies => {\n      getTmdbConfiguration();\n      renderMovies(dataMovies);\n    })\n    .catch(error => {\n      //   Notify.failure(`${error}`, optionsNotify);\n      console.log(error);\n    });\n}\nfunction getTmdbConfiguration() {\n  tmdb\n    .getTmdbConfiguration()\n    .then(dataMovies => {\n      // console.log(dataMovies);\n    })\n    .catch(error => {\n      //   Notify.failure(`${error}`, optionsNotify);\n      console.log(error);\n    });\n}\nconst temp = tmdb.getUrlSizePoster('poster_path');\n// temp.\nfunction renderMovies(dataMovies) {\n  gallery.innerHTML = null;\n  const filmsList = dataMovies.results\n    .map(({ id, original_title, poster_path, release_date, genre_ids }) => {\n      const urlSizePoster = tmdb.getUrlSizePoster(poster_path);\n      const url = urlSizePoster.find(obj => obj.name === 'w500');\n      const year = release_date.split('-')[0];\n      const genres = tmdb.getGenres(genre_ids);\n\n      const listItem = document.createElement('li');\n      const divCard = document.createElement('div');\n      divCard.classList.add('card');\n      divCard.setAttribute('data-id', id);\n\n      const divCardImg = document.createElement('div');\n      divCardImg.classList.add('card-img');\n\n      divCardImg.style.backgroundImage = `url(\"${url.url}\")`;\n\n      const divCardText = document.createElement('div');\n      divCardText.classList.add('card-text');\n\n      const pCardTextTitle = document.createElement('p');\n      pCardTextTitle.classList.add('card-text-title');\n      pCardTextTitle.textContent = original_title;\n\n      const pCardTextGenre = document.createElement('p');\n      pCardTextGenre.classList.add('card-text-genre');\n      pCardTextGenre.textContent = genres + ' | ' + year;\n\n      divCardText.appendChild(pCardTextTitle);\n      divCardText.appendChild(pCardTextGenre);\n\n      divCard.appendChild(divCardImg);\n      divCard.appendChild(divCardText);\n\n      listItem.appendChild(divCard);\n      gallery.appendChild(listItem);\n    })\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', filmsList);\n}\n\n// function render() {\n//   const listItem = document.createElement('li');\n//   const divCard = document.createElement('div');\n//   divCard.classList.add('card');\n\n//   const divCardImg = document.createElement('div');\n//   divCardImg.classList.add('card-img');\n// sectionOneBackground.style.backgroundImage = \"url('images/original.jpg')\";\n//   const divCardText = document.createElement('div');\n//   divCardText.classList.add('card-text');\n\n//   const pCardTextTitle = document.createElement('p');\n//   pCardTextTitle.classList.add('card-text-title');\n\n//   const pCardTextGenre = document.createElement('p');\n//   pCardTextGenre.classList.add('card-text-genre');\n\n//   divCardText.appendChild(pCardTextTitle);\n//   divCardText.appendChild(pCardTextGenre);\n\n//   divCard.appendChild(divCardImg);\n//   divCard.appendChild(divCardText);\n\n//   listItem.appendChild(divCard);\n//   gallery.appendChild(listItem);\n// }\n"],"names":["$2shzp","parcelRequire","default","defaults","headers","common","$3b8a0249197f5e1d$export$95c98a0345911bd6","posterPath","map","size","name","url","$8a7f79193043759c$var$searchButton","document","querySelector","$8a7f79193043759c$var$gallery","addEventListener","ev","async","currentPage","URLSearchParams","language","page","get","data","$3b8a0249197f5e1d$export$bfc6ce102e8c952a","then","dataMovies","$3b8a0249197f5e1d$export$9e617440724cfae9","catch","error","console","log","innerHTML","filmsList","results","id","original_title","poster_path","release_date","genre_ids","find","obj","year","split","genres","filter","genre","includes","join","$3b8a0249197f5e1d$export$c5604fa8028da00","listItem","createElement","divCard","classList","add","setAttribute","divCardImg","style","backgroundImage","divCardText","pCardTextTitle","textContent","pCardTextGenre","appendChild","insertAdjacentHTML","$8a7f79193043759c$var$renderMovies"],"version":3,"file":"23-projectGrupowy.c1f19803.js.map"}