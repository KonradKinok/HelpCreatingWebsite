{"mappings":"2fAKA,IAmCMA,EAAiBC,SAASC,cAAc,2BACxCC,EAAmBF,SAASC,cAAc,6BAE1CE,EAASH,SAASI,cAAc,OACtCD,EAAOE,UAAUC,IALC,sBAOlB,IAEMC,EAFOL,EAAiBM,UACPC,MAAM,MACFC,KAAK,IAE1BC,EADaJ,EAASE,MAAM,MACLC,KAAK,QAElCP,EAAOS,YAAc,UAAoBC,OAAVF,GAC/BZ,EAAee,QAAQX,GAEvBY,QAAQC,IAAI,WACZD,QAAQC,IAAIT,E","sources":["src/scripts/22.mjs"],"sourcesContent":["'use strict';\n//Import\nimport * as mainMethods from './functions.mjs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport axios from 'axios';\nconst optionsNotify = {\n  timeout: 4000,\n};\n\n//section1 articule3\n// mainMethods.htmlTagViewExample(\n//   'div#example-theory-s1a3',\n//   'div#example-practice-s1a3'\n// );\n\n// const form_s1a4 = document.querySelector('form#form-s1a3');\n// const postsList_s1a4 = document.querySelector('ul#user-list-s1a3');\n\n// form_s1a4.addEventListener('submit', event => {\n//   event.preventDefault();\n//   const {\n//     elements: { input_id_s1a4, input_body_s1a4 },\n//   } = event.currentTarget;\n//   console.log(input_id_s1a4.value, input_body_s1a4.value);\n//   const options = getOptionsToUrl_s1a4(\n//     input_id_s1a4.value,\n//     input_body_s1a4.value\n//   );\n//   fetch(\n//     `https://jsonplaceholder.typicode.com/posts/${input_id_s1a4.value}`,\n//     options\n//   )\n//     .then(response => response.json())\n//     .then(post => {\n//       console.log(post);\n//       renderPosts_s1a4(post);\n//     })\n//     .catch(error => Notify.failure(`${error}`, optionsNotify));\n// });\nconst className = 'example-theory-pre';\nconst example_theory = document.querySelector('div#example-theory-s1a3');\nconst example_practice = document.querySelector('div#example-practice-s1a3');\n\nconst phrase = document.createElement('pre');\nphrase.classList.add(className);\n// phrase.textContent = 'HTML:' + example_practice.innerHTML;\nconst temp = example_practice.innerHTML;\nconst splitTemp = temp.split('  ');\nconst joinTemp = splitTemp.join('');\nconst splitTemp2 = joinTemp.split('\\n');\nconst joinTemp2 = splitTemp2.join('\\n\\r');\n// const newTemp = temp.replace(/ {2,}/g, '\\n\\r');\nphrase.textContent = `'HTML: ${joinTemp2}`;\nexample_theory.prepend(phrase);\n\nconsole.log('zmiana1');\nconsole.log(joinTemp);\n"],"names":["$7fcc9ec7dc549186$var$example_theory","document","querySelector","$7fcc9ec7dc549186$var$example_practice","$7fcc9ec7dc549186$var$phrase","createElement","classList","add","$7fcc9ec7dc549186$var$joinTemp","innerHTML","split","join","$7fcc9ec7dc549186$var$joinTemp2","textContent","concat","prepend","console","log"],"version":3,"file":"22-skladniaAsyncAwait.ec87c9e5.js.map"}