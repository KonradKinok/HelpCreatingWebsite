{"mappings":"AAGA,MA2EMA,EAAS,CACbC,KAAM,SACNC,QAAS,QACTC,IAAK,GACLC,SAAU,SAENC,EAAQC,OAAOC,OAAOP,GAC5BK,EAAMJ,KAAO,QACbI,EAAMF,IAAM,GAWIG,OAAOC,OANN,CACfN,KAAM,OACNE,IAAK,GACLD,QAAS,SACTE,SAAU,UAGZJ,EAAOC,KAAO,SACdD,EAAOE,QAAU,QACjBF,EAAOG,IAAM,GAiDC,IAjBd,MACEK,aAAYC,MAAEA,EAAKC,MAAEA,EAAKC,MAAEA,IAC1BC,KAAKH,MAAQA,EACbG,KAAKF,MAAQA,EACbE,KAAKD,MAAQA,C,CAGfE,WACE,OAAOD,KAAKD,K,CAIdG,YAAYC,GACVH,KAAKD,MAAQI,C,GAIO,CAAEN,MAAO,OAAQC,MAAO,KAAMC,MAAO,OAqO7D,MAAMK,EACJC,SAAoB,IACpBA,kBAAkBN,GAChB,OAAIA,GAASK,GAAME,EACV,6CAEF,kC,CAETV,aAAYG,MAAEA,IACZC,KAAKD,MAAQA,C,EAIJ,IAAIK,EAAM,CAAEL,MAAO,OACpB,IAAIK,EAAM,CAAEL,MAAO,OA2C/B,MAAMQ,UAhBN,MACEC,MAEAZ,YAAYY,GACVR,KAAKQ,MAAQA,C,CAGXA,YACF,OAAOR,KAAKQ,K,CAGVA,UAAMC,GACRT,KAAKQ,MAAQC,C,GAOfJ,mBAAqB,CACnBK,MAAO,QACPC,UAAW,aAGbf,aAAYY,MAAEA,EAAKI,YAAEA,IACnBC,MAAML,GACNR,KAAKY,YAAcA,C,EAIT,IAAIL,EAAQ,CACxBC,MAAO,iBACPI,YAAaL,EAAQO,YAAYH,YA2CnC,MAAMI,EAAU,IArBhB,cAfA,MACEP,MAEAZ,YAAYY,GACVR,KAAKQ,MAAQA,C,CAGXA,YACF,OAAOR,KAAKQ,K,CAGVA,UAAMC,GACRT,KAAKQ,MAAQC,C,GAKfO,kBAAoB,GACpBX,mBAAqB,CACnBK,MAAO,QACPC,UAAW,aAGbf,aAAYY,MAAEA,EAAKI,YAAEA,IACnBC,MAAML,GACNR,KAAKY,YAAcA,C,CAErBK,UAAUT,GACRR,KAAKgB,kBAAkBE,KAAKV,E,CAE9BW,cAAcX,GACZ,OAAOR,KAAKgB,kBAAkBI,SAASZ,E,GAKf,CAC1BA,MAAO,iBACPI,YApFF,cAdA,MACEhB,YAAYY,GACVR,KAAKQ,MAAQA,C,CAGXA,YACF,OAAOR,KAAKQ,K,CAGVA,UAAMC,GACRT,KAAKQ,MAAQC,C,GAKfJ,mBAAqB,CAAEK,MAAO,QAASC,UAAW,cAmF/BG,YAAYH,YAGjCU,QAAQC,IAAIP,EAAQP,OACpBa,QAAQC,IAAIP,EAAQH,aAEpBG,EAAQE,UAAU,iBAClBI,QAAQC,IAAIP,EAAQC,mBACpBK,QAAQC,IAAIP,EAAQI,cAAc,mBAClCE,QAAQC,IAAIP,EAAQI,cAAc","sources":["src/scripts/10.mjs"],"sourcesContent":["'use strict';\n\n//01. this\nconst pizzaPalace = {\n  pizzas: ['Supercheese', 'Smoked', 'Four meats'],\n  checkPizza(pizzaName) {\n    return this.pizzas.includes(pizzaName);\n  },\n  order(pizzaName) {\n    const isPizzaAvailable = this.checkPizza(pizzaName);\n\n    if (!isPizzaAvailable) {\n      return `Sorry, there is no pizza named «${pizzaName}»`;\n    }\n\n    return `Order accepted, preparing «${pizzaName}» pizza`;\n  },\n};\n// console.log(pizzaPalace.order('Four meats'));\n\n//02. this\nconst customer = {\n  username: 'Mango',\n  balance: 24000,\n  discount: 0.1,\n  orders: ['Burger', 'Pizza', 'Salad'],\n  getBalance() {\n    return this.balance;\n  },\n  getDiscount() {\n    return this.discount;\n  },\n  setDiscount(value) {\n    this.discount = value;\n  },\n  getOrders() {\n    return this.orders;\n  },\n  addOrder(cost, order) {\n    this.balance -= cost - cost * this.discount;\n    this.orders.push(order);\n  },\n};\n\n// customer.setDiscount(0.15);\n// console.log(customer.getDiscount()); // 0.15\n// customer.addOrder(5000, 'Steak');\n// console.log(customer.getBalance()); // 19750\n// console.log(customer.getOrders()); // [\"Burger\", \"Pizza\", \"Salad\", \"Steak\"]\n\n//03. this\nconst historyService = {\n  orders: [\n    { email: 'jacob@hotmail.com', dish: 'Burrito' },\n    { email: 'solomon@topmail.net', dish: 'Burger' },\n    { email: 'artemis@coldmail.net', dish: 'Pizza' },\n    { email: 'solomon@topmail.net', dish: 'Apple pie' },\n    { email: 'jacob@hotmail.com', dish: 'Taco' },\n  ],\n  getOrdersLog() {\n    return this.orders\n      .map(order => `email: ${order.email} dish: ${order.dish}`)\n      .join(' - ');\n  },\n  getEmails() {\n    const emails = this.orders.map(order => order.email);\n    const uniqueEmails = new Set(emails);\n    return [...uniqueEmails];\n  },\n  getOrdersByEmail(email) {\n    return this.orders.filter(order => order.email === email);\n  },\n};\n//console.log(historyService.getOrdersLog());\n//console.log(historyService.getEmails());\n//console.log(historyService.getOrdersByEmail('solomon@topmail.net')); //[{ email: \"solomon@topmail.net\", dish: \"Burger\" }, { email: \"solomon@topmail.net\", dish: \"Apple pie\" }]\n\n//04. prototype\nconst parent = {\n  name: 'Stacey',\n  surname: 'Moore',\n  age: 54,\n  heritage: 'Irish',\n};\nconst child = Object.create(parent);\nchild.name = 'Jason';\nchild.age = 27;\n// console.log(parent, child);\n// console.log(`Czy parent jest prototypem child: ${parent.isPrototypeOf(child)}`);\n\n//05. prototype\nconst ancestor = {\n  name: 'Paul',\n  age: 83,\n  surname: 'Dawson',\n  heritage: 'Irish',\n};\nconst parent5 = Object.create(ancestor);\nparent.name = 'Stacey';\nparent.surname = 'Moore';\nparent.age = 54;\n\n// const child = Object.create(parent5);\n// child.name = 'Jason';\n// child.age = 27;\n\n//06. deklaracja klasa\nclass Car06 {}\n\n//07. deklaracja klasa\nclass Car {\n  constructor(brand, model, price) {\n    // Inicjalizacja właściwości instancji\n    this.brand = brand;\n    this.model = model;\n    this.price = price;\n  }\n}\n// console.log(new Car('Audi', 'Q3', 36000));\n\n//08. deklaracja klasa Destrukturyzacja obiektu\nclass Car08 {\n  constructor({ brand, model, price }) {\n    this.brand = brand;\n    this.model = model;\n    this.price = price;\n  }\n}\n// const car = new Car08({ brand: 'Audi', model: 'Q3', price: 36000 });\n// console.log(car);\n\n//09. deklaracja klasa Destrukturyzacja obiektu metody\nclass Car09 {\n  constructor({ brand, model, price }) {\n    this.brand = brand;\n    this.model = model;\n    this.price = price;\n  }\n  // Metoda getPrice\n  getPrice() {\n    return this.price;\n  }\n\n  // Metoda changeEmail\n  changePrice(newPrice) {\n    this.price = newPrice;\n  }\n}\n\nconst car09 = new Car09({ brand: 'Audi', model: 'Q3', price: 36000 });\n// console.log(car09);\n// console.log(`Price before:${car09.getPrice()}`);\n// car09.changePrice(21_000);\n// console.log(`Price after:`, car09.getPrice());\n\n//10. deklaracja klasa Destrukturyzacja obiektu metody\nclass Storage {\n  constructor(items = []) {\n    this.items = items;\n  }\n  // Metoda getItems\n  getItems() {\n    return this.items;\n  }\n\n  // Metoda addItem\n  addItem(newItem) {\n    this.items.push(newItem); // Dodawanie nowego elementu do tablicy\n  }\n\n  // Metoda addItem\n  removeItem(itemToRemove) {\n    // Znajdź indeks elementu o nazwie 'Prolonger'\n    const indexToRemove = this.items.indexOf(itemToRemove);\n\n    // Jeśli indeks istnieje (jest większy lub równy 0), usuń element\n    if (indexToRemove !== -1) {\n      this.items.splice(indexToRemove, 1);\n    }\n  }\n}\n// const storage = new Storage(['Nanitoids', 'Prolonger', 'Antigravitator']);\n// console.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\"]\n// storage.addItem('Droid');\n// console.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\", \"Droid\"]\n// storage.removeItem('Prolonger');\n// console.log(storage.getItems()); // [\"Nanitoids\", \"Antigravitator\", \"Droid\"]\n\n//11. deklaracja klasa   metody\nclass StringBuilder {\n  constructor(initialValue = ``) {\n    this.value = initialValue;\n  }\n  getValue() {\n    return this.value;\n  }\n  padStart(str) {\n    // const tempValue = this.value.split('');\n    // tempValue.unshift(str);\n    // this.value = tempValue.join('');\n    this.value = str + this.value;\n    // return this.value;\n  }\n  padEnd(str) {\n    // const tempValue = this.value.split('');\n    // tempValue.push(str);\n    // this.value = tempValue.join('');\n    this.value += str;\n    // return this.value;\n  }\n\n  padBoth(str) {\n    this.padStart(str);\n    this.padEnd(str);\n    // return this.value;\n  }\n}\n\n// const builder = new StringBuilder('.');\n// console.log(builder.getValue()); // \".\"\n// builder.padStart('^');\n// console.log(builder.getValue()); // \"^.\"\n// builder.padEnd('^');\n// console.log(builder.getValue()); // \"^.^\"\n// builder.padBoth('=');\n// console.log(builder.getValue()); // \"=^.^=\"\n\n//12. deklaracja klasa  prywatne właściwości\nclass Car12 {\n  #brand;\n  constructor({ brand, model, price }) {\n    this.#brand = brand;\n    this.model = model;\n    this.price = price;\n  }\n  getBrand() {\n    return this.#brand;\n  }\n  changeBrand(newBrand) {\n    this.#brand = newBrand;\n    return this.#brand;\n  }\n}\n// const car = new Car12({ brand: 'Audi', model: 'Q3', price: 36000 });\n// console.log(car);\n// console.log(car.getBrand());\n// car.changeBrand('Honda');\n// console.log(car.getBrand());\n\n//13. deklaracja klasa  prywatne właściwości\nclass Storage13 {\n  #items;\n  constructor(items) {\n    this.#items = items;\n  }\n\n  getItems() {\n    return this.#items;\n  }\n\n  addItem(newItem) {\n    this.#items.push(newItem);\n  }\n\n  removeItem(itemToRemove) {\n    this.#items = this.#items.filter(item => item !== itemToRemove);\n  }\n}\n\n// const storage = new Storage13(['Nanitoids', 'Prolonger', 'Antigravitator']);\n// console.log(storage);\n// console.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\"]\n// storage.addItem('Droid');\n// console.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\", \"Droid\"]\n// storage.removeItem('Prolonger');\n// console.log(storage.getItems()); // [\"Nanitoids\", \"Antigravitator\", \"Droid\"]\n\n//14. klasa  prywatne właściwości\nclass StringBuilder14 {\n  #value;\n  constructor(initialValue) {\n    this.#value = initialValue;\n  }\n\n  getValue() {\n    return this.#value;\n  }\n\n  padEnd(str) {\n    this.#value += str;\n  }\n\n  padStart(str) {\n    this.#value = str + this.#value;\n  }\n\n  padBoth(str) {\n    this.padStart(str);\n    this.padEnd(str);\n  }\n}\n\n// const builder14 = new StringBuilder14('.');\n// console.log(builder14.getValue()); // \".\"\n// builder14.padStart('^');\n// console.log(builder14.getValue()); // \"^.\"\n// builder14.padEnd('^');\n// console.log(builder14.getValue()); // \"^.^\"\n// builder14.padBoth('=');\n// console.log(builder14.getValue()); // \"=^.^=\"\n\n//15. klasa  Gettery i settery\nclass Car15 {\n  #brand;\n  #model;\n  #price;\n\n  constructor({ brand, model, price }) {\n    this.#brand = brand;\n    this.#model = model;\n    this.#price = price;\n  }\n\n  get brand() {\n    return this.#brand;\n  }\n\n  set brand(newBrand) {\n    this.#brand = newBrand;\n  }\n\n  get model() {\n    return this.#model;\n  }\n\n  set model(newModel) {\n    this.#model = newModel;\n  }\n\n  get price() {\n    return this.#price;\n  }\n\n  set price(newPrice) {\n    this.#price = newPrice;\n  }\n}\n\n//16. klasa  Static\nclass Car16 {\n  #price;\n  static MAX_PRICE = 50000;\n  constructor({ price }) {\n    this.#price = price;\n  }\n\n  get price() {\n    return this.#price;\n  }\n\n  set price(newPrice) {\n    if (newPrice <= Car16.MAX_PRICE) {\n      this.#price = newPrice;\n    }\n  }\n}\n\n// const audi = new Car16({ price: 35000 });\n// console.log(audi.price); // 35000\n\n// audi.price = 49000;\n// console.log(audi.price); // 49000\n\n// audi.price = 51000;\n// console.log(audi.price); // 49000\n// console.log(Car16.MAX_PRICE); // 50000\n\n//17. klasa  Static\nclass Car17 {\n  static #MAX_PRICE = 50000;\n  static checkPrice(price) {\n    if (price <= Car17.#MAX_PRICE) {\n      return 'Success! Price is within acceptable limits';\n    }\n    return 'Error! Price exceeds the maximum';\n  }\n  constructor({ price }) {\n    this.price = price;\n  }\n}\n\nconst audi = new Car17({ price: 36000 });\nconst bmw = new Car17({ price: 64000 });\n\n// console.log(Car17.checkPrice(audi.price)); // \"Success! Price is within acceptable limits\"\n// console.log(Car17.checkPrice(bmw.price)); // \"Error! Price exceeds the maximum\"\n\n//18. klasa  extends\nclass User18 {\n  constructor(email) {\n    this.email = email;\n  }\n\n  get email() {\n    return this.email;\n  }\n\n  set email(newEmail) {\n    this.email = newEmail;\n  }\n}\n\nclass Admin extends User18 {\n  static AccessLevel = { BASIC: 'basic', SUPERUSER: 'superuser' };\n}\n\n// console.log(Admin.AccessLevel.BASIC);\n\n//19. klasa  extends\nclass User19 {\n  email;\n\n  constructor(email) {\n    this.email = email;\n  }\n\n  get email() {\n    return this.email;\n  }\n\n  set email(newEmail) {\n    this.email = newEmail;\n  }\n}\n\nclass Admin19 extends User19 {\n  // Change code below this line\n\n  static AccessLevel = {\n    BASIC: 'basic',\n    SUPERUSER: 'superuser',\n  };\n\n  constructor({ email, accessLevel }) {\n    super(email);\n    this.accessLevel = accessLevel;\n  }\n}\n\nconst mango = new Admin19({\n  email: 'mango@mail.com',\n  accessLevel: Admin19.AccessLevel.SUPERUSER,\n});\n\n// console.log(mango.email); // \"mango@mail.com\"\n// console.log(mango.accessLevel); // \"superuser\"\n\n//20. klasa  extends\nclass User20 {\n  email;\n\n  constructor(email) {\n    this.email = email;\n  }\n\n  get email() {\n    return this.email;\n  }\n\n  set email(newEmail) {\n    this.email = newEmail;\n  }\n}\nclass Admin20 extends User20 {\n  // Change code below this line\n  blacklistedEmails = [];\n  static AccessLevel = {\n    BASIC: 'basic',\n    SUPERUSER: 'superuser',\n  };\n\n  constructor({ email, accessLevel }) {\n    super(email);\n    this.accessLevel = accessLevel;\n  }\n  blacklist(email) {\n    this.blacklistedEmails.push(email);\n  }\n  isBlacklisted(email) {\n    return this.blacklistedEmails.includes(email);\n  }\n  // Change code above this line\n}\n\nconst mango20 = new Admin20({\n  email: 'mango@mail.com',\n  accessLevel: Admin.AccessLevel.SUPERUSER,\n});\n\nconsole.log(mango20.email); // \"mango@mail.com\"\nconsole.log(mango20.accessLevel); // \"superuser\"\n\nmango20.blacklist('poly@mail.com');\nconsole.log(mango20.blacklistedEmails); // [\"poly@mail.com\"]\nconsole.log(mango20.isBlacklisted('mango@mail.com')); // false\nconsole.log(mango20.isBlacklisted('poly@mail.com')); // true\n"],"names":["$a6d8eef220267de3$var$parent","name","surname","age","heritage","$a6d8eef220267de3$var$child","Object","create","constructor","brand","model","price","this","getPrice","changePrice","newPrice","$a6d8eef220267de3$var$Car17","static","MAX_PRICE","$a6d8eef220267de3$var$Admin19","email","newEmail","BASIC","SUPERUSER","accessLevel","super","AccessLevel","$a6d8eef220267de3$var$mango20","blacklistedEmails","blacklist","push","isBlacklisted","includes","console","log"],"version":3,"file":"10-prototypyKlasy.50979cee.js.map"}